// SPDX-License-Identifier: MIT

pragma solidity 0.8.21;
import "forge-std/Script.sol";
import {Exploit, GatekeeperThree} from "../test/gatekeeper/Gatekeeper.sol";

contract ExplotGatekeeper is Script {
    function run() public {
        // address gateAddr = 0x1;
        // GatekeeperThree gate = GatekeeperThree(gateAddr);
        // Exploit exploit = new Exploit();
        // uint256 pk = vm.envUint("PK");
        // address me = vm.addr(pk);
        // uint256 password = block.timestamp;
        // vm.startBroadcast(me);
        // gate.createTrick();
    }

    // function testExploitEntrant() public {
    //     uint256 password = block.timestamp;
    //     gate.createTrick();

    //     vm.prank(address(exp));
    //     gate.construct0r();
    //     gate.getAllowance(password);

    //     address(gate).call{value: 0.00101 ether}("");

    //     vm.prank(address(me));
    //     exp.enter(payable(gate));

    //     assertEq(gate.entrant(), DEFAULT_SENDER, "No Entrant claimed");
    // }
}
